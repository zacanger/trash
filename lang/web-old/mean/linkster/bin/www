#!/usr/bin/env node

const
  app    = require('../app')
, http   = require('http')
, port   = normalizePort(process.env.PORT || '4444')
, server = http.createServer(app)

app.set('port', port)

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val){
  var port = parseInt(val, 10)
  if (isNaN(port)){
    return val
  }
  if (port >= 0){
    return port
  }
  return false
}

function onError(error){
  if (error.syscall !== 'listen') {
    throw error
  }
  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' would need root')
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1);
      break;
    default:
      throw error
  }
}

function onListening(){
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  console.log(`check localhost at ${bind}`)
}

